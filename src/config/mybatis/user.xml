<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzt.asyn.sysmgr.dao.UserDao">
	<resultMap type="com.lzt.asyn.sysmgr.model.User" id="User">
		<result property="userId" column="user_id"/>
		<result property="loginName" column="login_name"/>
		<result property="tel" column="tel"/>
		<result property="email" column="email"/>
		<result property="password" column="password"/>
		<result property="userName" column="user_name"/>
	</resultMap>
	<insert id="insert" parameterType="com.lzt.asyn.sysmgr.model.User">
		<selectKey resultType="Long" keyProperty="userId" order="AFTER"> 
		    select last_insert_id()
		</selectKey>
		insert into cw_user
			(login_name,tel,email,password,user_name)
		values
			(#{loginName,jdbcType=VARCHAR},#{tel,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{password},#{userName})
	</insert>
	<select id="login" parameterType="string"
		resultMap="User">
		select user_id,login_name,tel,email,password,user_name from cw_user t
		 where login_name=#{loginName} and password=#{password}
	</select>
	<delete id="delete" parameterType="String">
		delete from cw_user where user_id = #{id}
	</delete>
	<select id="sameUser" parameterType="string" resultMap="User">
		select user_id,login_name,tel,email,password,user_name from cw_user t
		 where login_name=#{loginName}
	</select>
	<update id="update" parameterType="com.lzt.asyn.sysmgr.model.User">
		update cw_user
		<set>
			<if test="loginName != null and loginName != ''">login_name = #{loginName},</if>
			<if test="tel != null and tel != ''">tel = #{tel},</if>
			<if test="email != null and email != ''">email = #{email},</if>
			<if test="password != null and password != ''">password = #{password},</if>
			<if test="userName != null and userName != ''">user_name = #{userName},</if>
		</set>
		where user_id = #{userId}
	</update>
	<sql id="querySmUserCommon">
		select user_id,login_name,tel,email,password,user_name from cw_user t
	</sql>
	
	<select id="getById" parameterType="Long" resultMap="User">
		<include refid="querySmUserCommon"/> where user_id = #{id} 
	</select>

	<select id="queryByArgs" parameterType="com.lzt.asyn.sysmgr.model.User" resultMap="User">
		<include refid="querySmUserCommon"/>
		<include refid="querySmUserWhere"/>
		 order by t.user_id
		<if test="beginRowNum!=null and rows!=null">
			 limit #{beginRowNum},#{rows}
		</if>
	</select>
	<select id="query" parameterType="com.lzt.asyn.sysmgr.model.User" resultMap="User">
		<include refid="querySmUserCommon"/>
	</select>
	<select id="queryByArgsCount" parameterType="com.lzt.asyn.sysmgr.model.User" resultType="Long">
		select count(1) from cw_user t
		<include refid="querySmUserWhere"/>
	</select>
	<sql id="querySmUserWhere">
		<where>
			<if test="userId != null and userId != -1">
				and user_id = #{userId}
			</if>
			<if test="loginName != null and loginName != ''">
				and login_name = #{loginName}
			</if>
			<if test="tel != null and tel != ''">
				and tel like concat('%',#{tel},'%')
			</if>
			<if test="email != null and email != ''">
				and email = #{email}
			</if>
			<if test="password != null and password != ''">
				and password = #{password}
			</if>
			<if test="userName != null and userName != ''">
				and user_name like concat('%',#{userName},'%')
			</if>
		</where>
	</sql>
</mapper>